---
title: "Population genetics analyses compiled"
author: "Julia Harenčár"
date: "5/2/2022"
format: 
  html:
    code-fold: true
    code-tools: true
    code-overflow: wrap
    toc: true
    number-sections: true
theme:
  light: minty
  dark: superhero
editor_options: 
  chunk_output_type: console
---

```{r}
#| echo: false
library(ggplot2)
library(ggrepel)
library(patchwork)
library(dplyr)
library(tidyverse)
library(readr)
theme_set(theme_bw())
```

author: "Julia Harenčár" date: "5/2/2022" output: html_document

```{r setup, include=FALSE}
knitr::opts_chunk$set(
	echo = TRUE,
	fig.height = 3,
	fig.path = "ANGSD/PCAngsd_figs/",
	fig.width = 5
)
knitr::opts_knit$set(root.dir = '/Users/Julia/Documents/GitHub/Population_genetics_vill_alle')
#knitr::opts_knit$set(root.dir = '/Users/Julia/Library/CloudStorage/GoogleDrive-jharenca@ucsc.edu/My Drive/GitHub/seq_analysis/ANGSD')
```
## PCAs
Below, I summarize the PCAs I generated by running PCAngsd on the genotype likelihood (beagle) file generated from clean bams with greater than 0.05x coverage WITH -sites specified based on bcftools site filtering.

#### PCA of LGAHVB

generally a 0.15 cutoff

```{r full_angsd1_AVH_PCA, echo=FALSE}
LGAHVBpop <- read.table("ANGSD/angsd_out/LGAHVB_231220.pop.info")
cov <- as.matrix(read.table("ANGSD/angsd_out/PCAngsd/LGAHVB_231220.PCAngsd.cov"))
e <- eigen(cov)

PC1 <- e$vectors[,1]
PC2 <- e$vectors[,2]
spp <- LGAHVBpop[,2]
ID <- LGAHVBpop[,1]
PC12.LGAVHB.co0.15 <- data.frame(PC1, PC2, ID, spp)

# Calculate the proportion of variance explained by each PC
variance_explained <- e$values / sum(e$values)
variance_explained[1] # 0.115
variance_explained[2] # 0.101

ggplot(PC12.LGAVHB.co0.15, aes(x=PC1, y=PC2, fill=spp)) +
  geom_point(size = 3, pch = 21, colour="black") +
  scale_x_reverse() +
  xlab("PC1 (11.5%)") +
  ylab("PC2 (10.1%)") +
  theme_bw() + 
  annotate("text", x = -0.2, y = 0.075, label = paste("# sites = 7,195"), hjust = 1.1, vjust = -1.5, size = 4, color = "black")
  
#geom_text_repel(aes(label=ID), size =1.5, nudge_y = 0.03, max.overlaps = 30)
#ggtitle("AVH1.selected.sites.co0.15x") +
#geom_text_repel(aes(label=ID), size =3, nudge_y = 0.03)

  
## example of how to add repelled text labels:
#library(ggrepel)
#ggplot(mtcars, aes(wt, mpg, label = rownames(mtcars))) +
#  geom_text_repel() +
#  geom_point(color = 'red') +
#  theme_classic(base_size = 16)
```

#### PCAs of alle, vill, and hybrids only (ANGSD_1; only selected sites with 0.05x coverage cutoff)

PCAngsd run on beagle file from angsd1 (samtools; see 'ANGSD run tracking - full dataset' in `[g-drive]/GitHub/seq_analysis/ANGSD/angsd_runs` with estimation of independent allele frequencies. Plot created from output of the following code:\
`python pcangsd.py -beagle $IN_DIR/selected_sites_0.05co_AVH.genolike.beagle.gz -o $OUT_DIR/sites_0.15co_AVH_2_PCAngsd`

```{r full_angsd1_AVH_PCA, echo=FALSE}
#latest (240121)
#Number of sites after MAF filtering (0.05): 13227
AVHF1pop <- read.table("ANGSD/angsd_out/AHVF1_0.15co_240109.clean.pop.info")
cov <- as.matrix(read.table("ANGSD/angsd_out/PCAngsd/AHVF1_240109.PCAngsd.cov"))
e <- eigen(cov)

PC1 <- e$vectors[,1]
PC2 <- e$vectors[,2]
spp <- AVHF1pop[,2]
ID <- AVHF1pop[,1]
PC12.AVHF1.co0.15 <- data.frame(PC1, PC2, ID, spp)

# Calculate the proportion of variance explained by each PC
variance_explained <- e$values / sum(e$values)
variance_explained[2] # only like 2%, so very little and can ignore

#number of sites in the dataset:
num_sites <- 13227

# With hand pollinated likely backcrosses (vill pollen, hybrid mom)
ggplot(PC12.AVHF1.co0.15, aes(x=PC1, y=PC2, fill=spp)) +
  geom_point(size = 3, pch = 21, colour="black") +
  scale_fill_manual(values=c("#CC79A7", "#93c572","#56B4E9", "#FFD700"), name=paste("Species"), labels=c(expression(italic("C. allenii")), "F1","hybrid", expression(italic("C. villosissimus")))) +
  scale_x_reverse() +
  theme_bw() +
  theme(legend.text.align = 0) + 
  xlab("PC1 ()") +
  ylab("PC2 (1.9%") + 
  labs(x = paste0("PC1 (", round(variance_explained[1], 4)*100, "%)"), y = paste0("PC2 (", round(variance_explained[2], 3)*100, "%)")) +
   annotate("text", x = -0.17, y = 0.25, label = paste("# sites =", num_sites), hjust = 1.1, vjust = -1.5, size = 4, color = "black")
  
# Without hand pollinated likely backcrosses (vill pollen, hybrid mom) #other yellow: #F0E442
n_alle <- PC12.AVHF1.co0.15 %>% filter(spp == "ALLE") %>% nrow()
n_vill <- PC12.AVHF1.co0.15 %>% filter(spp == "VILL") %>% nrow()
n_hyb <- PC12.AVHF1.co0.15 %>% filter(spp == "HYB") %>% nrow()
  
AHV_PCA <- PC12.AVHF1.co0.15 %>% 
  filter(spp !="F1") %>% 
  ggplot(aes(x=PC1, y=PC2, fill=spp)) +
  geom_point(size = 3, pch = 21, colour="black") +
  scale_fill_manual(values=c("#CC79A7", "#56B4E9", "#FFD700"), name=paste("Species"), labels=c(bquote(italic("C. allenii")~"(n="*.(n_alle)*")"), bquote(~"hybrid"~"(n="*.(n_hyb)*")"), bquote(italic("C. villosissimus")~"(n="*.(n_vill)*")"))) +
  theme_bw() +
  theme(legend.text.align = 0) + 
  xlab("PC1 ()") +
  ylab("PC2 (1.9%") + 
  labs(x = paste0("PC1 (", round(variance_explained[1], 3)*100, "%)"), y = paste0("PC2 (", round(variance_explained[2], 2)*100, "%)")) +
   annotate("text", x = 0.18, y = 0.28, label = paste("# sites =", num_sites), hjust = 1.1, vjust = -1.5, size = 3, color = "black") +
  geom_text_repel(aes(label=ID), size =1.5, nudge_y = 0.03, max.overlaps = 30)

ggsave("ANGSD/PCAngsd_figs/AHV_PCA_240121.png", device = "png", width = 15, height = 7, units = "cm")

#  geom_text_repel(aes(label=ID), size =1.5, nudge_y = 0.03, max.overlaps = 30)
#ggtitle("AVH1.selected.sites.co0.15x") +
#geom_text_repel(aes(label=ID), size =3, nudge_y = 0.03)

## older
AVHF1pop <- read.table("ANGSD/angsd_out/AHVF1_231220.pop.info")
cov <- as.matrix(read.table("ANGSD/angsd_out/PCAngsd/AHVF1_231220.PCAngsd.cov"))
e <- eigen(cov)

PC1 <- e$vectors[,1]
PC2 <- e$vectors[,2]
spp <- AVHF1pop[,2]
ID <- AVHF1pop[,1]
PC12.AVHF1.co0.15 <- data.frame(PC1, PC2, ID, spp)

# Calculate the proportion of variance explained by each PC
variance_explained <- e$values / sum(e$values)
variance_explained[2] # only like 2%, so very little and can ignore

ggplot(PC12.AVHF1.co0.15, aes(x=PC1, y=PC2, fill=spp)) +
  geom_point(size = 3, pch = 21, colour="black") +
  scale_fill_manual(values=c("#CC79A7", "#93c572","#56B4E9", "#FFD700"), name=paste("Species"), labels=c(expression(italic("C. allenii")), "F1","hybrid", expression(italic("C. villosissimus")))) +
  scale_x_reverse() +
  theme_bw() +
  theme(legend.text.align = 0) + 
  geom_text_repel(aes(label=ID), size =1.5, nudge_y = 0.03, max.overlaps = 30)
#ggtitle("AVH1.selected.sites.co0.15x") +
#geom_text_repel(aes(label=ID), size =3, nudge_y = 0.03)
 
  
## example of how to add repelled text labels:
#library(ggrepel)
#ggplot(mtcars, aes(wt, mpg, label = rownames(mtcars))) +
#  geom_text_repel() +
#  geom_point(color = 'red') +
#  theme_classic(base_size = 16)
```

#### PCAs of alle, vill, hybrids, guan, and laev (ANGSD_1; only clean bams with 0.15x coverage cutoff - less than 35bp and lower than 20 mapping Q removed)

##FIX## #PCAngsd run on beagle file from angsd1 (samtools; see 'ANGSD run tracking - full dataset' in \#`[g-drive]/GitHub/seq_analysis/ANGSD/angsd_runs` with estimation of independent allele frequencies. #Plot created from output of the following code:\
\#`pcangsd.py -beagle $IN_DIR/full_AVHLG_genolike.beagle.gz -o $OUT_DIR/AVHLG_1_PCAngsd -threads 44`

```{r full_angsd1_AVHLG_PCA, echo=FALSE}
LGVHApop <- read.table("ANGSD/angsd_out/LGVHA.clean.pop.info")
cov <- as.matrix(read.table("ANGSD/angsd_out/PCAngsd/sites_0.15co_nosml_q20_LGVHA_PCAngsd.cov"))
e <- eigen(cov)

PC1 <- e$vectors[,1]
PC2 <- e$vectors[,2]
spp <- LGVHApop[,2]
ID <- LGVHApop[,1]
PC12.LGVHA.co0.15X <- data.frame(PC1, PC2, ID, spp)

library(ggplot2)
ggplot(PC12.LGVHA.co0.15X, aes(x=PC1, y=PC2)) +
  geom_point(aes(color=factor(spp))) +
  ggtitle("LGVHA.co0.15x") +
  geom_text_repel(aes(label=ID), size =3, nudge_y = 0.03) 
 
  

#labeling code to check out:
#ggplot(tab, aes(x = EV2, y = EV1, col = pop)) +
#  geom_point(alpha = 0.5, size = 5) +
#  # geom_text(aes(label=sample.id), size =3, hjust = 0, nudge_x = 0.02) +
#  # geom_text(aes(label=sample.id), size =3, position=position_jitter(width=0.2,height=0,2)) +
#  geom_text_repel(aes(label=sample.id), size =3, nudge_y = 0.03) +
#  theme_bw()
```
## Local ancestry
Generated with aHMM from ancestryinfer

```{r}
## build example aHMM output plots
# chromosome 1
chr1_19.560 <- read_tsv("aHMM/final_params_0.02er_0.0001pulse/chr1/19.560_HYB.posterior")
chr1_19.615 <- read_tsv("aHMM/final_params_0.02er_0.0001pulse/chr1/19.615_HYB.posterior")
chr1_19.727 <- read_tsv("aHMM/final_params_0.02er_0.0001pulse/chr1/19.727_HYB.posterior")

names(chr1_19.560) <- c("chrom", "position", "ref_homo", "het", "alt_homo")
names(chr1_19.615) <- c("chrom", "position", "ref_homo", "het", "alt_homo")
names(chr1_19.727) <- c("chrom", "position", "ref_homo", "het", "alt_homo")

chr1_19.560_0.9co <- chr1_19.560 %>% filter(ref_homo > 0.9 | alt_homo > 0.9 | het > 0.9) %>% mutate (ancestry = ref_homo+het*0.5)
chr1_19.615_0.9co <- chr1_19.615 %>% filter(ref_homo > 0.9 | alt_homo > 0.9 | het > 0.9) %>% mutate (ancestry = ref_homo+het*0.5)
chr1_19.727_0.9co <- chr1_19.727 %>% filter(ref_homo > 0.9 | alt_homo > 0.9 | het > 0.9) %>% mutate (ancestry = ref_homo+het*0.5)

chr1_19.560 <- ggplot(chr1_19.560_0.9co, aes(position, ancestry)) + ggtitle("H_19.560 chr1 26746 sites") + geom_point() + ylim(-0.01,1.01)
chr1_19.615 <- ggplot(chr1_19.615_0.9co, aes(position, ancestry)) + ggtitle("H_19.615 chr1 26746 sites") + geom_point() + ylim(-0.01,1.01)
chr1_19.727 <- ggplot(chr1_19.727_0.9co, aes(position, ancestry)) + ggtitle("H_19.727 chr1 26746 sites") + geom_point() + ylim(-0.01,1.01)

# chromosome 2
chr2_19.560 <- read_tsv("aHMM/final_params_0.02er_0.0001pulse/chr2/19.560_HYB.posterior")
chr2_19.615 <- read_tsv("aHMM/final_params_0.02er_0.0001pulse/chr2/19.615_HYB.posterior")
chr2_19.727 <- read_tsv("aHMM/final_params_0.02er_0.0001pulse/chr2/19.727_HYB.posterior")

names(chr2_19.560) <- c("chrom", "position", "ref_homo", "het", "alt_homo")
names(chr2_19.615) <- c("chrom", "position", "ref_homo", "het", "alt_homo")
names(chr2_19.727) <- c("chrom", "position", "ref_homo", "het", "alt_homo")

chr2_19.560_0.9co <- chr2_19.560 %>% filter(ref_homo > 0.9 | alt_homo > 0.9 | het > 0.9) %>% mutate (ancestry = ref_homo+het*0.5)
chr2_19.615_0.9co <- chr2_19.615 %>% filter(ref_homo > 0.9 | alt_homo > 0.9 | het > 0.9) %>% mutate (ancestry = ref_homo+het*0.5)
chr2_19.727_0.9co <- chr2_19.727 %>% filter(ref_homo > 0.9 | alt_homo > 0.9 | het > 0.9) %>% mutate (ancestry = ref_homo+het*0.5)

chr2_19.560 <- ggplot(chr2_19.560_0.9co, aes(position, ancestry)) + ggtitle("H_19.560 chr2 30001 sites") + geom_point() + ylim(-0.01,1.01)
chr2_19.615 <- ggplot(chr2_19.615_0.9co, aes(position, ancestry)) + ggtitle("H_19.615 chr2 30001 sites") + geom_point() + ylim(-0.01,1.01)
chr2_19.727 <- ggplot(chr2_19.727_0.9co, aes(position, ancestry)) + ggtitle("H_19.727 chr2 30001 sites") + geom_point() + ylim(-0.01,1.01)

# chromosome 3
chr3_19.560 <- read_tsv("aHMM/final_params_0.02er_0.0001pulse/chr3/19.560_HYB.posterior")
chr3_19.615 <- read_tsv("aHMM/final_params_0.02er_0.0001pulse/chr3/19.615_HYB.posterior")
chr3_19.727 <- read_tsv("aHMM/final_params_0.02er_0.0001pulse/chr3/19.727_HYB.posterior")

names(chr3_19.560) <- c("chrom", "position", "ref_homo", "het", "alt_homo")
names(chr3_19.615) <- c("chrom", "position", "ref_homo", "het", "alt_homo")
names(chr3_19.727) <- c("chrom", "position", "ref_homo", "het", "alt_homo")

chr3_19.560_0.9co <- chr3_19.560 %>% filter(ref_homo > 0.9 | alt_homo > 0.9 | het > 0.9) %>% mutate (ancestry = ref_homo+het*0.5)
chr3_19.615_0.9co <- chr3_19.615 %>% filter(ref_homo > 0.9 | alt_homo > 0.9 | het > 0.9) %>% mutate (ancestry = ref_homo+het*0.5)
chr3_19.727_0.9co <- chr3_19.727 %>% filter(ref_homo > 0.9 | alt_homo > 0.9 | het > 0.9) %>% mutate (ancestry = ref_homo+het*0.5)

chr3_19.560 <- ggplot(chr3_19.560_0.9co, aes(position, ancestry)) + ggtitle("H_19.560 chr3 20397 sites") + geom_point() + ylim(-0.01,1.01)
chr3_19.615 <- ggplot(chr3_19.615_0.9co, aes(position, ancestry)) + ggtitle("H_19.615 chr3 20397 sites") + geom_point() + ylim(-0.01,1.01)
chr3_19.727 <- ggplot(chr3_19.727_0.9co, aes(position, ancestry)) + ggtitle("H_19.727 chr3 20397 sites") + geom_point() + ylim(-0.01,1.01)

# cromosome 4
chr4_19.560 <- read_tsv("aHMM/final_params_0.02er_0.0001pulse/chr4/19.560_HYB.posterior")
chr4_19.615 <- read_tsv("aHMM/final_params_0.02er_0.0001pulse/chr4/19.615_HYB.posterior")
chr4_19.727 <- read_tsv("aHMM/final_params_0.02er_0.0001pulse/chr4/19.727_HYB.posterior")

names(chr4_19.560) <- c("chrom", "position", "ref_homo", "het", "alt_homo")
names(chr4_19.615) <- c("chrom", "position", "ref_homo", "het", "alt_homo")
names(chr4_19.727) <- c("chrom", "position", "ref_homo", "het", "alt_homo")

chr4_19.560_0.9co <- chr4_19.560 %>% filter(ref_homo > 0.9 | alt_homo > 0.9 | het > 0.9) %>% mutate (ancestry = ref_homo+het*0.5)
chr4_19.615_0.9co <- chr4_19.615 %>% filter(ref_homo > 0.9 | alt_homo > 0.9 | het > 0.9) %>% mutate (ancestry = ref_homo+het*0.5)
chr4_19.727_0.9co <- chr4_19.727 %>% filter(ref_homo > 0.9 | alt_homo > 0.9 | het > 0.9) %>% mutate (ancestry = ref_homo+het*0.5)

chr4_19.560 <- ggplot(chr4_19.560_0.9co, aes(position, ancestry)) + ggtitle("H_19.560 chr4 17932 sites") + geom_point() + ylim(-0.01,1.01)
chr4_19.615 <- ggplot(chr4_19.615_0.9co, aes(position, ancestry)) + ggtitle("H_19.615 chr4 17932 sites") + geom_point() + ylim(-0.01,1.01)
chr4_19.727 <- ggplot(chr4_19.727_0.9co, aes(position, ancestry)) + ggtitle("H_19.727 chr4 17932 sites") + geom_point() + ylim(-0.01,1.01)

# chromosome 5
chr5_19.560 <- read_tsv("aHMM/final_params_0.02er_0.0001pulse/chr5/19.560_HYB.posterior")
chr5_19.615 <- read_tsv("aHMM/final_params_0.02er_0.0001pulse/chr5/19.615_HYB.posterior")
chr5_19.727 <- read_tsv("aHMM/final_params_0.02er_0.0001pulse/chr5/19.727_HYB.posterior")

names(chr5_19.560) <- c("chrom", "position", "ref_homo", "het", "alt_homo")
names(chr5_19.615) <- c("chrom", "position", "ref_homo", "het", "alt_homo")
names(chr5_19.727) <- c("chrom", "position", "ref_homo", "het", "alt_homo")

chr5_19.560_0.9co <- chr5_19.560 %>% filter(ref_homo > 0.9 | alt_homo > 0.9 | het > 0.9) %>% mutate (ancestry = ref_homo+het*0.5)
chr5_19.615_0.9co <- chr5_19.615 %>% filter(ref_homo > 0.9 | alt_homo > 0.9 | het > 0.9) %>% mutate (ancestry = ref_homo+het*0.5)
chr5_19.727_0.9co <- chr5_19.727 %>% filter(ref_homo > 0.9 | alt_homo > 0.9 | het > 0.9) %>% mutate (ancestry = ref_homo+het*0.5)

chr5_19.560 <- ggplot(chr5_19.560_0.9co, aes(position, ancestry)) + ggtitle("H_19.560 chr5 24607 sites") + geom_point() + ylim(-0.01,1.01)
chr5_19.615 <- ggplot(chr5_19.615_0.9co, aes(position, ancestry)) + ggtitle("H_19.615 chr5 24607 sites") + geom_point() + ylim(-0.01,1.01)
chr5_19.727 <- ggplot(chr5_19.727_0.9co, aes(position, ancestry)) + ggtitle("H_19.727 chr5 24607 sites") + geom_point() + ylim(-0.01,1.01)

# chromosome 6
chr6_19.560 <- read_tsv("aHMM/final_params_0.02er_0.0001pulse/chr6/19.560_HYB.posterior")
chr6_19.615 <- read_tsv("aHMM/final_params_0.02er_0.0001pulse/chr6/19.615_HYB.posterior")
chr6_19.727 <- read_tsv("aHMM/final_params_0.02er_0.0001pulse/chr6/19.727_HYB.posterior")

names(chr6_19.560) <- c("chrom", "position", "ref_homo", "het", "alt_homo")
names(chr6_19.615) <- c("chrom", "position", "ref_homo", "het", "alt_homo")
names(chr6_19.727) <- c("chrom", "position", "ref_homo", "het", "alt_homo")

chr6_19.560_0.9co <- chr6_19.560 %>% filter(ref_homo > 0.9 | alt_homo > 0.9 | het > 0.9) %>% mutate (ancestry = ref_homo+het*0.5)
chr6_19.615_0.9co <- chr6_19.615 %>% filter(ref_homo > 0.9 | alt_homo > 0.9 | het > 0.9) %>% mutate (ancestry = ref_homo+het*0.5)
chr6_19.727_0.9co <- chr6_19.727 %>% filter(ref_homo > 0.9 | alt_homo > 0.9 | het > 0.9) %>% mutate (ancestry = ref_homo+het*0.5)

chr6_19.560 <- ggplot(chr6_19.560_0.9co, aes(position, ancestry)) + ggtitle("H_19.560 chr6 19823 sites") + geom_point() + ylim(-0.01,1.01)
chr6_19.615 <- ggplot(chr6_19.615_0.9co, aes(position, ancestry)) + ggtitle("H_19.615 chr6 19823 sites") + geom_point() + ylim(-0.01,1.01)
chr6_19.727 <- ggplot(chr6_19.727_0.9co, aes(position, ancestry)) + ggtitle("H_19.727 chr6 19823 sites") + geom_point() + ylim(-0.01,1.01)

# chromosome 7
chr7_19.560 <- read_tsv("aHMM/final_params_0.02er_0.0001pulse/chr7/19.560_HYB.posterior")
chr7_19.615 <- read_tsv("aHMM/final_params_0.02er_0.0001pulse/chr7/19.615_HYB.posterior")
chr7_19.727 <- read_tsv("aHMM/final_params_0.02er_0.0001pulse/chr7/19.727_HYB.posterior")

names(chr7_19.560) <- c("chrom", "position", "ref_homo", "het", "alt_homo")
names(chr7_19.615) <- c("chrom", "position", "ref_homo", "het", "alt_homo")
names(chr7_19.727) <- c("chrom", "position", "ref_homo", "het", "alt_homo")

chr7_19.560_0.9co <- chr7_19.560 %>% filter(ref_homo > 0.9 | alt_homo > 0.9 | het > 0.9) %>% mutate (ancestry = ref_homo+het*0.5)
chr7_19.615_0.9co <- chr7_19.615 %>% filter(ref_homo > 0.9 | alt_homo > 0.9 | het > 0.9) %>% mutate (ancestry = ref_homo+het*0.5)
chr7_19.727_0.9co <- chr7_19.727 %>% filter(ref_homo > 0.9 | alt_homo > 0.9 | het > 0.9) %>% mutate (ancestry = ref_homo+het*0.5)

chr7_19.560 <- ggplot(chr7_19.560_0.9co, aes(position, ancestry)) + ggtitle("H_19.560 chr7 17428 sites") + geom_point() + ylim(-0.01,1.01)
chr7_19.615 <- ggplot(chr7_19.615_0.9co, aes(position, ancestry)) + ggtitle("H_19.615 chr7 17428 sites") + geom_point() + ylim(-0.01,1.01)
chr7_19.727 <- ggplot(chr7_19.727_0.9co, aes(position, ancestry)) + ggtitle("H_19.727 chr7 17428 sites") + geom_point() + ylim(-0.01,1.01)

# chromosome 8
chr8_19.560 <- read_tsv("aHMM/final_params_0.02er_0.0001pulse/chr8/19.560_HYB.posterior")
chr8_19.615 <- read_tsv("aHMM/final_params_0.02er_0.0001pulse/chr8/19.615_HYB.posterior")
chr8_19.727 <- read_tsv("aHMM/final_params_0.02er_0.0001pulse/chr8/19.727_HYB.posterior")

names(chr8_19.560) <- c("chrom", "position", "ref_homo", "het", "alt_homo")
names(chr8_19.615) <- c("chrom", "position", "ref_homo", "het", "alt_homo")
names(chr8_19.727) <- c("chrom", "position", "ref_homo", "het", "alt_homo")

chr8_19.560_0.9co <- chr8_19.560 %>% filter(ref_homo > 0.9 | alt_homo > 0.9 | het > 0.9) %>% mutate (ancestry = ref_homo+het*0.5)
chr8_19.615_0.9co <- chr8_19.615 %>% filter(ref_homo > 0.9 | alt_homo > 0.9 | het > 0.9) %>% mutate (ancestry = ref_homo+het*0.5)
chr8_19.727_0.9co <- chr8_19.727 %>% filter(ref_homo > 0.9 | alt_homo > 0.9 | het > 0.9) %>% mutate (ancestry = ref_homo+het*0.5)

chr8_19.560 <- ggplot(chr8_19.560_0.9co, aes(position, ancestry)) + ggtitle("H_19.560 chr8 17570 sites") + geom_point() + ylim(-0.01,1.01)
chr8_19.615 <- ggplot(chr8_19.615_0.9co, aes(position, ancestry)) + ggtitle("H_19.615 chr8 17570 sites") + geom_point() + ylim(-0.01,1.01)
chr8_19.727 <- ggplot(chr8_19.727_0.9co, aes(position, ancestry)) + ggtitle("H_19.727 chr8 17570 sites") + geom_point() + ylim(-0.01,1.01)

# chromosome 9
chr9_19.560 <- read_tsv("aHMM/final_params_0.02er_0.0001pulse/chr9/19.560_HYB.posterior")
chr9_19.615 <- read_tsv("aHMM/final_params_0.02er_0.0001pulse/chr9/19.615_HYB.posterior")
chr9_19.727 <- read_tsv("aHMM/final_params_0.02er_0.0001pulse/chr9/19.727_HYB.posterior")

names(chr9_19.560) <- c("chrom", "position", "ref_homo", "het", "alt_homo")
names(chr9_19.615) <- c("chrom", "position", "ref_homo", "het", "alt_homo")
names(chr9_19.727) <- c("chrom", "position", "ref_homo", "het", "alt_homo")

chr9_19.560_0.9co <- chr9_19.560 %>% filter(ref_homo > 0.9 | alt_homo > 0.9 | het > 0.9) %>% mutate (ancestry = ref_homo+het*0.5)
chr9_19.615_0.9co <- chr9_19.615 %>% filter(ref_homo > 0.9 | alt_homo > 0.9 | het > 0.9) %>% mutate (ancestry = ref_homo+het*0.5)
chr9_19.727_0.9co <- chr9_19.727 %>% filter(ref_homo > 0.9 | alt_homo > 0.9 | het > 0.9) %>% mutate (ancestry = ref_homo+het*0.5)

chr9_19.560 <- ggplot(chr9_19.560_0.9co, aes(position, ancestry)) + ggtitle("H_19.560 chr9 17012 sites") + geom_point() + ylim(-0.01,1.01)
chr9_19.615 <- ggplot(chr9_19.615_0.9co, aes(position, ancestry)) + ggtitle("H_19.615 chr9 17012 sites") + geom_point() + ylim(-0.01,1.01)
chr9_19.727 <- ggplot(chr9_19.727_0.9co, aes(position, ancestry)) + ggtitle("H_19.727 chr9 17012 sites") + geom_point() + ylim(-0.01,1.01)

three_ex_multipanel_wild <- chr1_19.615 / chr2_19.615 / chr3_19.615 / chr4_19.615 / chr5_19.615 / chr6_19.615 / chr7_19.615 / chr8_19.615 / chr9_19.615 |  chr1_19.727 / chr2_19.727 / chr3_19.727 / chr4_19.727 / chr5_19.727 / chr6_19.727 / chr7_19.727 / chr8_19.727 / chr9_19.727 | chr1_19.560 / chr2_19.560 / chr3_19.560 / chr4_19.560 / chr5_19.560 / chr6_19.560 / chr7_19.560 / chr8_19.560 / chr9_19.560 

ggsave("aHMM/final_params_0.02er_0.0001pulse/three_ex_multipanel_wild_aHMM_plot.pdf", three_ex_multipanel_wild, units = "mm", width = 500, height = 700)

```

## ABBA/BABA

```{r}
library('pracma')
```

### Whole genome

Code to run abba baba test and calculate D-statistic with angsd:

```{bash}
# code to run abba/baba test
angsd -doAbbababa2 1 -bam BAV_clean_ordered_0.3co_240219.bam.filelist -sizeFile sizeFile.size -doCounts 1 -out lasiOUT_full_240219 -anc /hb/groups/kay_lab/genomes/C.lasius_genome_NCBI.fasta -minQ 30 -minMapQ 30 -enhance 1 -only_proper_pairs 1 -baq 1 -ref /hb/groups/kay_lab/genomes/C.lasius_genome_NCBI.fasta -blockSize 5000000 -nThreads 96

# code to calculate D-statistic and associated stats
cd ANGSD/angsd_out/doAbbababa2
Rscript estAvgError.R angsdFile="lasiOUT_full_240215" out="lasiOUT_full_240215" sizeFile=sizeFile.size nameFile=popNames.name

# --- Table of Results --- Combination  1  out of  3  ---
# --- H1= bracteatus  H2= allenii  H3= villosissimus  H4= lasius  ---
# ---------------------------------------------------------------------------------
#   Mode          |Dstat          |sd(Dstat)      |Djack          |Zscore |Pvalue
# ---------------------------------------------------------------------------------
# Observed        |1.141e-01      |1.194e-02      |1.141e-01      |9.557  |0.0e+00
# ---------------------------------------------------------------------------------
# No Trans        |1.665e-01      |1.533e-02      |1.665e-01      |10.861 |0.0e+00
# ---------------------------------------------------------------------------------
```

### Per Chromosome

Code to run abba baba test and calculate D-statistic with angsd:

```{bash}
# use array to run eparately on each of 9 chromosomes:
angsd -doAbbababa2 1 -bam BAV_clean_ordered_0.3co_240219.bam.filelist -sizeFile sizeFile.size -doCounts 1 -out lasiOUT_chr${SLURM_ARRAY_TASK_ID}_240219 -anc /hb/groups/kay_lab/genomes/C.lasius_genome_NCBI.fasta -minQ 30 -minMapQ 30 -only_proper_pairs 1 -baq 1 -ref /hb/groups/kay_lab/genomes/C.lasius_genome_NCBI.fasta -blockSize 5000000 -nThreads 96 -r Chrom${SLURM_ARRAY_TASK_ID}

# use loop to calculate D-stats with R script for each:
for i in {1..9}; do
        Rscript estAvgError.R angsdFile="lasiOUT_chr${i}_240219" out="lasiOUT_chr${i}_240219" sizeFile=sizeFile.size nameFile=popNames.name
done
```

```{r}
# Per chromosome  values and p-val correction
raw_pvals <- c(0.000079, 0.027063, 0.000168, 0.015394, 0.040503, 0.000393, 0.04996, 0.000095, 0.152879)
FDR_pvals <- p.adjust(raw_pvals, method = "BH") # I notice that the highest p-val doesn't change at all... 
FDR_pvals # 0.00042750 0.04059450 0.00050400 0.02770920 0.05207529 0.00088425 0.05620500 0.00042750 0.15287900
```

## Dsuite

### Per Chromosome Dstats and F4-ratio

```{r}
# Per chromosome  values and p-val correction
raw_pvals <- c(8.12e-07, 2.66e-06, 4.52e-13,  1.39e-10, 7.16e-09, 1.27e-07, 1.20e-06, 1.05e-10, 6.95e-05)
FDR_pvals <- p.adjust(raw_pvals, method = "BH")
```

### Plotting f_dM and d_f

#### 50 variant windows, 25 variant steps

```{r}
# Read all chromosome files intoo single dataframe
# Create an empty dataframe to store the combined data
LASIout_w50s25_all9 <- data.frame()

# List all the .tsv files in the directory
file_list <- list.files(path = "./Dsuite/f_Dm_w50s25_refV2", pattern = "*.txt", full.names = TRUE)

# Loop through each file and read it into a temporary dataframe
for (file in file_list) {
  temp_df <- read.delim(file, sep = "\t")
  
  # Combine the temporary dataframe with the existing data
  LASIout_w50s25_all9 <- rbind(LASIout_w50s25_all9, temp_df)
}

# Plotting 50,25 f_dM

# remove small contigs, keep only chromosomes
LASIout_w50s25_all9 <- LASIout_w50s25_all9 %>% 
  filter(startsWith(chr, "Chrom"))

# check for failed rows
# LASIout_w50s25_all9[is.na(LASIout_w50s25_all9$f_dM), ]
# None! yay!
# remove failed rows
# LASIout_w50s25_all9 <- LASIout_w50s25_all9[!is.na(LASIout_w50s25_all9$f_dM), ]

### plotting f_dM ###
# Create cutofLASIout_w50s25_all9 with increasing stringency based on percentiles of the distribution of negative values (as suggested by Duite creator, Milan Malinsky) 
cutoff99thPercentile <- quantile(abs(LASIout_w50s25_all9$f_dM[which(LASIout_w50s25_all9$f_dM < 0)]),0.99)
cutoff99.9thPercentile <- quantile(abs(LASIout_w50s25_all9$f_dM[which(LASIout_w50s25_all9$f_dM < 0)]),0.999)
cutoff99.99thPercentile <- quantile(abs(LASIout_w50s25_all9$f_dM[which(LASIout_w50s25_all9$f_dM < 0)]),0.9999)

# create single bp location for x-axis that adds previous chromosmes lengths
data_cum <- LASIout_w50s25_all9 %>% 
  group_by(chr) %>% 
  summarise(max_windowStart = max(windowStart)) %>% 
  mutate(windowStart_add = lag(cumsum(max_windowStart), default = 0)) %>% 
  select(chr, windowStart_add)

LASIout_w50s25_all9 <- LASIout_w50s25_all9 %>% 
  inner_join(data_cum, by = "chr") %>% 
  mutate(windowStart_cum = windowStart + windowStart_add)

axis_set <- LASIout_w50s25_all9 %>% 
  group_by(chr) %>% 
  summarize(center = mean(windowStart_cum))

LASI_99.9thper_w50s25_f_dM <- ggplot(data=LASIout_w50s25_all9, aes(x=windowStart_cum, y=f_dM, color = as_factor(chr))) +
  # geom_vline(xintercept = 71772467, colour = "green", linewidth =2) + # line for % chloro reabsorp
  # geom_vline(xintercept = 83412886, colour = "purple", linewidth =2) + # line for % N reabsorption
  # geom_vline(xintercept = c(171402076,700244502), colour = "cyan3", linewidth =2) + # lines for seed dormancy
  # geom_vline(xintercept = 322334915, colour = "orange", linewidth =2) + # line for toughness
  # geom_vline(xintercept = 321497235, colour = "blue", linewidth =2) +# line for growth rate
  geom_point() +
  coord_cartesian(xlim = c(24398, 1120430367)) +
  geom_hline(yintercept = c(cutoff99.9thPercentile, -cutoff99.9thPercentile), linetype = "dashed", color = "red") +
  scale_color_manual(values = rep(c("black", "darkgray"), unique(length(axis_set$chr)))) +
  guides(color = "none") +
  geom_point(data = subset(LASIout_w50s25_all9, f_dM > cutoff99.9thPercentile | f_dM < -cutoff99.9thPercentile), color = "red") +
  scale_x_continuous(label = axis_set$chr, breaks = axis_set$center) +
  labs(x = NULL, 
       y = "f_dM") +
  theme(axis.text=element_text(size=40),
        axis.title=element_text(size=40),
        plot.margin=unit(c(2,1,1,1), 'cm'))

# # Save plot
# ggsave("Dsuite/LASIout_w50s25_f_dM_allChrs_cutoff99.9thPer.png", LASI_99.9thper_w50s25_f_dM, device = "png", width = 110, height = 7, units = "cm")

### plotting d_f ###
# Create cutofLASIout_w50s25_all9 with increasing stringency based on percentiles of the distribution of negative values (as suggested by Duite creator, Milan Malinsky) 
cutoff99thPercentile_d_f <- quantile(abs(LASIout_w50s25_all9$d_f[which(LASIout_w50s25_all9$d_f < 0)]),0.99)
cutoff99.9thPercentile_d_f <- quantile(abs(LASIout_w50s25_all9$d_f[which(LASIout_w50s25_all9$d_f < 0)]),0.999)
cutoff99.99thPercentile_d_f <- quantile(abs(LASIout_w50s25_all9$d_f[which(LASIout_w50s25_all9$d_f < 0)]),0.9999)

LASI_99.9thper_w50s25_d_f <- ggplot(data=LASIout_w50s25_all9, aes(x=windowStart_cum, y=d_f, color = as_factor(chr))) +
  # geom_vline(xintercept = 71772467, colour = "green", linewidth =2) + # line for % chloro reabsorp
  # geom_vline(xintercept = 83412886, colour = "purple", linewidth =2) + # line for % N reabsorption
  # geom_vline(xintercept = c(171402076,700244502), colour = "cyan3", linewidth =2) + # lines for seed dormancy
  # geom_vline(xintercept = 322334915, colour = "orange", linewidth =2) + # line for toughness
  # geom_vline(xintercept = 321497235, colour = "blue", linewidth =2) +# line for growth rate
  geom_point() +
  coord_cartesian(xlim = c(24398, 1120430367)) +
  geom_hline(yintercept = c(cutoff99.9thPercentile_d_f, -cutoff99.9thPercentile_d_f), linetype = "dashed", color = "red") +
  scale_color_manual(values = rep(c("black", "darkgray"), unique(length(axis_set$chr)))) +
  guides(color = "none") +
  geom_point(data = subset(LASIout_w50s25_all9, d_f > cutoff99.9thPercentile_d_f | d_f < -cutoff99.9thPercentile_d_f), color = "red") +
  scale_x_continuous(label = axis_set$chr, breaks = axis_set$center) +
  labs(x = NULL, 
       y = "d_f") +
  theme(axis.text=element_text(size=40),
        axis.title=element_text(size=40))
  
# get first and last row per chromosome:
first_last_chr <- LASIout_w50s25_all9 %>% 
  group_by(chr) %>%
  arrange(windowStart_cum) %>%
  filter(row_number()==1 | row_number()==n())

### figure out value for other chromosmes by filtering for just chrom two and returning full line or just windowStart_cum for row with closest value... where windowStart is less than X and windowEnd is greater than X, print windowStart_cum
#OR - easier: print last row of each chromosome and just add the windowStart_cum value to X

# # Save plot
# ggsave("Dsuite/LASIout_w50s25_d_f_allChrs_cutoff99.9thPer.png", LASI_99.9thper_w50s25_d_f, device = "png", width = 110, height = 7, units = "cm")

# save as 2 panel plot:
LASI_out_f_dM.d_f_2panel <- LASI_99.9thper_w50s25_f_dM/LASI_99.9thper_w50s25_d_f
ggsave("Dsuite/LASIout_w50s25_f_dM.d_f_2panel_allChrs_cutoff99.9thPer.png", LASI_out_f_dM.d_f_2panel, device = "png", width = 100, height = 16, units = "cm")
```
## PIXY
```{r}
# function from the pixy website (https://pixy.readthedocs.io/en/latest/plotting.html)
pixy_to_long <- function(pixy_files){
  
  pixy_df <- list()
  
  for(i in 1:length(pixy_files)){
    
    stat_file_type <- gsub(".*_|.txt", "", pixy_files[i])
    
    if(stat_file_type == "pi"){
      
      df <- read_delim(pixy_files[i], delim = "\t")
      df <- df %>%
        gather(-pop, -window_pos_1, -window_pos_2, -chromosome,
               key = "statistic", value = "value") %>%
        rename(pop1 = pop) %>%
        mutate(pop2 = NA)
      
      pixy_df[[i]] <- df
      
      
    } else{
      
      df <- read_delim(pixy_files[i], delim = "\t")
      df <- df %>%
        gather(-pop1, -pop2, -window_pos_1, -window_pos_2, -chromosome,
               key = "statistic", value = "value")
      pixy_df[[i]] <- df
      
    }
    
  }
  
  bind_rows(pixy_df) %>%
    arrange(pop1, pop2, chromosome, window_pos_1, statistic)
  
}

# Import my data
pixy_folder <- "/Users/juliaharencar/Documents/Github/Population_genetics_vill_alle/pixy/output_0.2missingness_per_spp"
pixy_files <- list.files(pixy_folder, full.names = TRUE)
pixy_df <- pixy_to_long(pixy_files)
pixy_wide <- pivot_wider(pixy_df, names_from = statistic, values_from = value) %>% 
  mutate(chr_position = ((window_pos_1 + window_pos_2)/2)/1000000)

# # check congruence of chromosom positions with Dsuite
# first_last_chr_pixy <- pixy_wide %>% 
#   group_by(chromosome) %>%
#   arrange(windowStart_cum) %>%
#   filter(row_number()==1 | row_number()==n())

# plot with pixy's code, panel for each chromosome

pixy_labeller <- as_labeller(c(avg_pi = "pi",
                             avg_dxy = "D[XY]",
                             avg_wc_fst = "F[ST]"),
                             default = label_parsed)

# plotting summary statistics along a single chromosome
pixy_chr1 <- pixy_df %>%
  filter(chromosome == "Chrom1") %>%
  filter(statistic %in% c("avg_pi", "avg_dxy", "avg_wc_fst")) %>%
  mutate(chr_position = ((window_pos_1 + window_pos_2)/2)/1000000) %>%
  ggplot(aes(x = chr_position, y = value, color = statistic))+
  geom_line(size = 0.25)+
  facet_grid(statistic ~ .,
             scales = "free_y", switch = "x", space = "free_x",
             labeller = labeller(statistic = pixy_labeller,
                                 value = label_value))+
  xlab("Position on Chromosome (Mb)")+
  ylab("Statistic Value")+
  theme_bw()+
  theme(panel.spacing = unit(0.1, "cm"),
        strip.background = element_blank(),
        strip.placement = "outside",
        legend.position = "none")+
  scale_x_continuous(expand = c(0, 0))+
  scale_y_continuous(expand = c(0, 0))+
  scale_color_brewer(palette = "Set1")

# Define a list to store the ggplot objects for each chromosome
ggplot_list <- list()

# Loop through 9 chromosomes
for (i in 1:9) {
  chr_name <- paste0("pixy_chr", i)
  chr_assignment <- paste0("Chrom", i)
  
  # Filter the data for the current chromosome
  filtered_df <- pixy_df %>%
    filter(chromosome == chr_assignment) %>%
    filter(statistic %in% c("avg_pi", "avg_dxy", "avg_wc_fst")) %>%
    mutate(chr_position = ((window_pos_1 + window_pos_2)/2)/1000000)
  
  # Create the ggplot for the current chromosome
  gg <- ggplot(filtered_df, aes(x = chr_position, y = value, color = statistic)) +
    geom_line(size = 0.25) +
    facet_grid(statistic ~ ., scales = "free_y", switch = "x", space = "free_x",
               labeller = labeller(statistic = pixy_labeller, value = label_value)) +
    xlab(paste0("Position on Chromosome ", i, " (Mb)")) +
    ylab("Statistic Value") +
    theme_bw() +
    theme(panel.spacing = unit(0.1, "cm"), strip.background = element_blank(),
          strip.placement = "outside", legend.position = "none") +
    scale_x_continuous(expand = c(0, 0)) +
    scale_y_continuous(expand = c(0, 0)) +
    scale_color_brewer(palette = "Set1")
  
  # Add the ggplot to the list
  ggplot_list[[chr_name]] <- gg
}

ggplot_list[["pixy_chr1"]]

pdf("pixy_all_per_chrom_20per_each.pdf", height = 12, width = 12)
plot_grid(ggplot_list[["pixy_chr1"]],ggplot_list[["pixy_chr2"]],ggplot_list[["pixy_chr3"]],ggplot_list[["pixy_chr4"]],ggplot_list[["pixy_chr5"]],ggplot_list[["pixy_chr6"]],ggplot_list[["pixy_chr7"]],ggplot_list[["pixy_chr8"]],ggplot_list[["pixy_chr9"]],
          nrow = 3,
          ncol = 3)
dev.off()

### MY plotting ###
# create single bp location for x-axis that adds previous chromosmes lengths
pixy_data_cum <- pixy_wide %>% 
  group_by(chromosome) %>% 
  summarise(max_windowStart = max(window_pos_1)) %>% 
  mutate(windowStart_add = lag(cumsum(max_windowStart), default = 0)) %>% 
  select(chromosome, windowStart_add)

pixy_wide <- pixy_wide %>% 
  inner_join(pixy_data_cum, by = "chromosome") %>% 
  mutate(windowStart_cum = window_pos_1 + windowStart_add)

axis_set <- pixy_wide %>% 
  group_by(chromosome) %>% 
  summarize(center = mean(windowStart_cum))


cutoff99.9thPercentile <- quantile(pixy_wide$avg_dxy,0.999, na.rm = T)

# plot dxy
Dxy_plot <- ggplot(data=pixy_wide, aes(x=windowStart_cum, y=avg_dxy, color = as_factor(chromosome))) +
  # geom_vline(xintercept = 71772467, colour = "green", linewidth =2) + # line for % chloro reabsorp
  # geom_vline(xintercept = 83412886, colour = "purple", linewidth =2) + # line for % N reabsorption
  # geom_vline(xintercept = c(171402076,700244502), colour = "cyan3", linewidth =2) + # lines for seed dormancy
  # geom_vline(xintercept = 322334915, colour = "orange", linewidth =2) + # line for toughness
  # geom_vline(xintercept = 321497235, colour = "blue", linewidth =2) +# line for growth rate
  geom_point() +
  scale_color_manual(values = rep(c("black", "darkgray"), unique(length(axis_set$chromosome)))) +
  guides(color = "none") +
  scale_x_continuous(label = axis_set$chromosome, breaks = axis_set$center) +
  labs(x = NULL, 
       y = "Dxy") +
  geom_hline(yintercept = cutoff99.9thPercentile, linetype = "dashed", color = "red") +
  geom_point(data = subset(pixy_wide, avg_dxy > cutoff99.9thPercentile), color = "red") +
  theme(axis.text=element_text(size=40),
        axis.title=element_text(size=40))


# plot pi
cutoff99.9thPercentile <- quantile(pixy_wide$avg_pi,0.999, na.rm = T)
pi_plot <- ggplot(data=pixy_wide, aes(x=windowStart_cum, y=avg_pi, color = as_factor(chromosome))) +
  # geom_vline(xintercept = 71772467, colour = "green", linewidth =2) + # line for % chloro reabsorp
  # geom_vline(xintercept = 83412886, colour = "purple", linewidth =2) + # line for % N reabsorption
  # geom_vline(xintercept = c(171402076,700244502), colour = "cyan3", linewidth =2) + # lines for seed dormancy
  # geom_vline(xintercept = 322334915, colour = "orange", linewidth =2) + # line for toughness
  # geom_vline(xintercept = 321497235, colour = "blue", linewidth =2) +# line for growth rate
  geom_point() +
  scale_color_manual(values = rep(c("black", "darkgray"), unique(length(axis_set$chromosome)))) +
  guides(color = "none") +
  scale_x_continuous(label = axis_set$chromosome, breaks = axis_set$center) +
  labs(x = NULL, 
       y = "pi") +
  geom_hline(yintercept = cutoff99.9thPercentile, linetype = "dashed", color = "red") +
  geom_point(data = subset(pixy_wide, avg_pi > cutoff99.9thPercentile), color = "red") +
  theme(axis.text=element_text(size=40),
        axis.title=element_text(size=40))
  
# # plot Fst
wc_fst_plot <- ggplot(data=pixy_wide, aes(x=windowStart_cum, y=avg_wc_fst, color = as_factor(chromosome))) +
#  geom_vline(xintercept = 71772467, colour = "green", linewidth =2) + # line for % chloro reabsorp
#  geom_vline(xintercept = 83412886, colour = "purple", linewidth =2) + # line for % N reabsorption
#  geom_vline(xintercept = c(171402076,700244502), colour = "cyan3", linewidth =2) + # lines for seed dormancy
#   geom_vline(xintercept = 322334915, colour = "orange", linewidth =2) + # line for toughness
#   geom_vline(xintercept = 321497235, colour = "blue", linewidth =2) +# line for growth rate
  geom_point() +
  scale_color_manual(values = rep(c("black", "darkgray"), unique(length(axis_set$chromosome)))) +
  guides(color = "none") +
  scale_x_continuous(label = axis_set$chromosome, breaks = axis_set$center) +
  labs(x = NULL, y = "Fst")

# 3 panel pixy only
# Dxy_plot/pi_plot/wv_fst_plot

# 4 panel Dsuite and pixy:
combo_Dsuite_pixy_4panel <- LASI_99.9thper_w50s25_f_dM/LASI_99.9thper_w50s25_d_f/Dxy_plot/pi_plot + plot_annotation(tag_levels = 'A', tag_suffix = ')') & 
  theme(plot.tag.position = c(0, 1),
        plot.tag = element_text(size = 40, hjust = 0, vjust = 0))

ggsave("combo_Dsuite_pixy_4panel_refV2.png", combo_Dsuite_pixy_4panel, device = "png", width = 100, height = 36, units = "cm")

# 5 panel with fst
combo_Dsuite_pixy_5panel <- LASI_99.9thper_w50s25_f_dM/LASI_99.9thper_w50s25_d_f/Dxy_plot/pi_plot/wc_fst_plot + plot_annotation(tag_levels = 'A', tag_suffix = ')') & 
  theme(plot.tag.position = c(0, 1),
        plot.tag = element_text(size = 40, hjust = 0, vjust = 0))

ggsave("combo_Dsuite_pixy_5panel_refV2.png", combo_Dsuite_pixy_5panel, device = "png", width = 100, height = 45, units = "cm")

```

